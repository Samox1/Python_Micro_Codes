x <- c(100,50,20,10,5)
plot(x)
p1 <- c(0.5, 0.2, 0.2, 0.05, 0.05)
plot(p1)
chisq.test (x, p = p1)
p2 <- c(0.5, 0.3, 0.1, 0.05, 0.05)
chisq.test( x, p = p2)
p <- x/sum(x)
chisq.test (x, p = p)
print(p)
plot(p)
plot (p)
lines (p1, col="red")
lines (p2, col="blue")
h <- hist (rpois(200, lam = 3), breaks = (0:15)-0.5)
chisq.test (h$counts, p = dpois(h$mids, lam = 3))
chisq.test (h$counts, p = dpois(h$mids, lam = 3))
h <- hist (rpois(200, lam = 3), breaks = (0:15)-0.5)
chisq.test (h$counts, p = dpois(h$mids, lam = 3), rescale.p = TRUE)
plot (h$mids, h$density)
lines (h$mids, dpois(h$mids, lam = 3), col="red", lwd=2)
x <- rnorm (100)
y <- rnorm (100)
ks.test (x, y)
y <- rnorm (100, 1, 2)
ks.test (x, y)
ks.test (x, "pnorm", 0, 1)
x <- rpois (100, lam = 5)
y <- rpois (100, lam = 5)
ks.test (x, y)
y <- rpois (100, lam = 2)
ks.test (x, y)
# Wynik poniższego testu będzie niepoprawny, ponieważ rozkład Poissona jest rozkładem dyskretnym
ks.test (x, "ppois", lam = 5)
shapiro.test (rnorm(100))
shapiro.test (rnorm(100, 0, 5))
shapiro.test (runif(100, 0, 1))
wilcox.test (rnorm(100))
wilcox.test (rnorm(100, 1, 2), mu = 1)
wilcox.test (rnorm(100, 1, 2), mu = 2)
library(MASS)
x <- rnorm (200, mean = 5, sd = 1.5)
fit1 <- fitdistr (x, "normal")
fit1
y <- rexp (200, rate = 0.5)
fit2 <- fitdistr (y, "exponential")
fit2
plot(y)
plot(x)
hist(x)
hist(y)
z <- rweibull (200, scale = 1.5, shape = 3)
fit3 <- fitdistr (z, "weibull", list (scale = 1, shape = 1))
fit3
hist(z)
fit1$estimate
fit1$sd
fit1$loglik
# Testowanie rozkładu normalnego
wilcox.test (x, mu = fit1$estimate["mean"])
# Testowanie rozkładu wykładniczego
ks.test (y, "pexp", rate = fit2$estimate["rate"])
# Testowanie rozkładu Weibulla
ks.test (z, "pweibull", scale = fit3$estimate["scale"], shape = fit3$estimate["shape"])
# Rysowanie
library(ggplot2)
g <- ggplot (data.frame(x,y,z))
g + geom_histogram(aes(x = x,..density..), fill="blue", colour="black", alpha=0.4) +
stat_function(fun = dnorm,
args = list(mean = fit1$estimate["mean"],
sd = fit1$estimate["sd"]),
colour="red",
size=1.5)
g + geom_histogram(aes(x = y,..density..), fill="blue", colour="black", alpha=0.4) +
stat_function(fun = dexp,
args = list(rate = fit2$estimate["rate"]),
colour="red",
size=1.5)
g + geom_histogram(aes(x = z,..density..), fill="blue", colour="black", alpha=0.4) +
stat_function(fun = dweibull,
args = list(scale = fit3$estimate["scale"], shape = fit3$estimate["shape"]),
colour="red",
size=1.5)
dane <- read.table("data04.txt")
setwd("E:/GitHub/Python_Micro_Codes/AWDJR_2022Z/Laboratorium_6/Lab_6_Zadanie")
rm (list = ls())
library(ggplot2)
dane <- read.table("data04.txt")
View(dane)
g <- ggplot(dane)
g + geom_histogram(aes(x = V1,..density..), fill="blue", colour="black", alpha=0.4)
?read.table
dane <- read.table("data04.txt", col.names = c("x"))
View(dane)
?geom_histogram
library(ggplot2)
dane <- read.table("data04.txt", col.names = c("x"))
g <- ggplot(dane)
g + geom_histogram(aes(x = x,..density..), fill="blue", colour="black", alpha=0.4, bins = 20)
shapiro.test(dane$x)
wilcox.test(dane$x)
ks.test(dane$x)
wilcox.test(dane$x, mu=1)
wilcox.test(dane$x, mu=2)
wilcox.test(dane$x, mu=0.4033407)
wilcox.test(dane$x, mu=0.31)
wilcox.test(dane$x, mu=0.4)
wilcox.test(dane$x, mu=0.25)
wilcox.test(dane$x)
wilcox.test(dane$x, mu=0.25)
wilcox.test(dane$x, mu=0.3)
wilcox.test(dane$x, mu=0.31)
wilcox.test(dane$x, mu=0.32)
wilcox.test(dane$x, mu=0.35)
wilcox.test(dane$x, mu=0.4)
wilcox.test(dane$x, mu=0.37)
wilcox.test(dane$x, mu=0.39)
wilcox.test(dane$x, mu=0.4)
wilcox.test(dane$x, mu=0.41)
library(MASS)
?fitdistr
# fitdistr -> Cauchy’ego
fitdistr(dane$x, "cauchy")
fit1$loglik
# fitdistr -> Cauchy’ego
fit1 <- fitdistr(dane$x, "cauchy")
fit1$loglik
# fitdistr -> wykładniczego
fit2 <- fitdistr(dane$x, "exponential")
fit2$loglik
# fitdistr -> beta
fit3 <- fitdistr(dane$x, "beta")
fit3$loglik
# fitdistr -> beta
fit3 <- fitdistr(dane$x, "beta", list(shape = 2, rate = 2))
# fitdistr -> beta
fit3 <- fitdistr(dane$x, "beta")
# fitdistr -> beta
fit3 <- fitdistr(dane$x, "beta", start = list(shape1 = 2, shape2 = 4))
fit3$loglik
fit1$loglik
fit2$loglik
fit3$loglik
fit4$loglik
# fitdistr -> gamma
fit4 <- fitdistr(dane$x, "gamma")
fit4$loglik
?ks.test
View(fit1)
# ks.test -> wykładniczego
ks.test(dane$x, "pexp", rate = fit2$estimate["rate"])
fit1
# ks.test -> Cauchy’ego
ks.test(dane$x, "pcauchy", location = fit1$estimate["location"], scale = fit1$estimate["scale"])
fit3
# ks.test -> beta
ks.test(dane$x, "pbeta", shape1 = fit3$estimate["shape1"], shape2 = fit3$estimate["shape2"])
fit4
# ks.test -> gamma
ks.test(dane$x, "pgamma", shape1 = fit4$estimate["shape"], rate = fit4$estimate["rate"])
# ks.test -> gamma
ks.test(dane$x, "pgamma", shape = fit4$estimate["shape"], rate = fit4$estimate["rate"])
g + stat_function(fun = dbeta,
args = list(shape1 = fit3$estimate["shape1"], shape2 = fit3$estimate["shape2"]),
colour="red",
size=1.5)
g + geom_histogram(aes(x = x,..density..), fill="blue", colour="black", alpha=0.4, bins = 20) +
stat_function(fun = dbeta,
args = list(shape1 = fit3$estimate["shape1"], shape2 = fit3$estimate["shape2"]),
colour="red",
size=1.5)
View(fit4)
shapiro.test(dane$x)
wilcox.test(dane$x, mu=0.4)
wilcox.test(dane$x, mu=0.4)
fit3$loglik   # <- To jest maksimum "loglik" ze wszystkich testow
fit4$loglik
# ks.test -> Cauchy’ego
ks.test(dane$x, "pcauchy", location = fit1$estimate["location"], scale = fit1$estimate["scale"])
# ks.test -> wykładniczego
ks.test(dane$x, "pexp", rate = fit2$estimate["rate"])
# ks.test -> beta
ks.test(dane$x, "pbeta", shape1 = fit3$estimate["shape1"], shape2 = fit3$estimate["shape2"])
# ks.test -> gamma
ks.test(dane$x, "pgamma", shape = fit4$estimate["shape"], rate = fit4$estimate["rate"])
source("E:/GitHub/Python_Micro_Codes/AWDJR_2022Z/Laboratorium_6/Lab_6_Zadanie/Lab_6_Zadanie_4_SB.R")
warnings()
rm (list = ls())
source("E:/GitHub/Python_Micro_Codes/AWDJR_2022Z/Laboratorium_6/Lab_6_Zadanie/Lab_6_Zadanie_4_SB.R")
print(g)
plot(g)
plot(g)
g <- ggplot(dane)
g + geom_histogram(aes(x = x,..density..), fill="blue", colour="black", alpha=0.4, bins = 20)
plot(g)
g + geom_histogram(aes(x = x,..density..), fill="blue", colour="black", alpha=0.4, bins = 20)
print(shapiro.test(dane$x))
wilcox.test(dane$x)
shapiro.test(dane$x)
source("E:/GitHub/Python_Micro_Codes/AWDJR_2022Z/Laboratorium_6/Lab_6_Zadanie/Lab_6_Zadanie_4_SB.R")
source("E:/GitHub/Python_Micro_Codes/AWDJR_2022Z/Laboratorium_6/Lab_6_Zadanie/Lab_6_Zadanie_4_SB.R")
plot(gg1)
print(gg1)
source("E:/GitHub/Python_Micro_Codes/AWDJR_2022Z/Laboratorium_6/Lab_6_Zadanie/Lab_6_Zadanie_4_SB.R")
ggplot(g)

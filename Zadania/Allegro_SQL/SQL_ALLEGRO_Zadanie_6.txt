Zadanie 6:

Dla każdego z regionów wskaż najdłuższą podróż (nie zapomnij o podaniu jej ‘id’), która rozpoczęła się w danym regionie (stacja końcowa może być położona w innym regionie). Pod uwagę weź tylko podróże, które rozpoczęły się w 2018.

(wskazówka: oszacuj długość trasy wyliczając długość po linii prostej, użyj pola STATION_INFO.STATION_GEOM oraz twierdzenia Pitagorasa).

    UWAGA!

    W rozwiazaniu ważna jest kolejność kolumn; ich nazwa (alias) może być dowolna.

    Oczekiwana kolejność:

    (Nazwa regionu; ID regionu; długość trasy)

Schemat tabel:

CREATE TABLE REGIONS	
(	REGION_ID NUMBER(*,0),
	NAME VARCHAR2(50 BYTE)
);

CREATE TABLE STATION_STATUS
(	STATION_ID NUMBER(*,0),
	NUM_BIKES_AVAILABLE NUMBER(*,0),
	NUM_BIKES_DISABLED NUMBER(*,0),
	NUM_DOCKS_AVAILABLE NUMBER(*,0),
	NUM_DOCKS_DISABLED NUMBER(*,0),
	IS_INSTALLED CHAR(1 BYTE),
	IS_RENTING CHAR(1 BYTE),
	IS_RETURNING CHAR(1 BYTE),
	LAST_REPORTED NUMBER(*,0),
	NUM_EBIKES_AVAILABLE NUMBER(*,0),
	EIGHTD_HAS_AVAILABLE_KEYS CHAR(1 BYTE),
	ACTIVE_STATION_SERVICES_ID VARCHAR2(50 BYTE)
);

CREATE TABLE STATION_INFO
(	
    STATION_ID NUMBER(*,0),
	NAME VARCHAR2(200 BYTE),
	SHORT_NAME VARCHAR2(50 BYTE),
	REGION_ID NUMBER(*,0),
	RENTAL_METHODS VARCHAR2(100 BYTE),
	CAPACITY NUMBER(*,0),
	EXTERNAL_ID VARCHAR2(50 BYTE),
	RENTAL_URL VARCHAR2(100 BYTE),
	EIGHTD_HAS_KEY_DISPENSER CHAR(1 BYTE),
	HAS_KIOSK CHAR(1 BYTE),
	STATION_GEOM VARCHAR2(200 BYTE)
);

CREATE TABLE TRIPS
(	TRIP_ID NUMBER(*,0),
	START_DATE TIMESTAMP (6),
	START_STATION_ID NUMBER(*,0),
	END_DATE TIMESTAMP (6),
	END_STATION_ID NUMBER(*,0),
	BIKE_NUMBER NUMBER(*,0),
	ZIP_CODE VARCHAR2(10 BYTE),
	SUBSCRIBER_TYPE VARCHAR2(50 BYTE),
	C_SUBSCRIPTION_TYPE VARCHAR2(50 BYTE),
	MEMBER_BIRTH_YEAR NUMBER(*,0),
	MEMBER_GENDER VARCHAR2(10 BYTE),
	BIKE_SHARE_FOR_ALL_TRIP VARCHAR2(10 BYTE)
);


Expected results
Oakland	140820180403070015	0.0173849360876018178130170141510723696626
San Francisco	15820180208071012	0.0372528903246446100504669190119246253968

